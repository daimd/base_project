spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.datasource.generate-unique-name=false
spring.datasource.name=car_management

spring.jpa.show-sql=true

server.port=8787


# generate a private key
# openssl  genrsa -out keypair.pem 2048

# generate a public key from the private key created
# openssl  rsa -in keypair.pem -pubout -out public.pem

#How we need to have keypai as a public key. If we run it as above, we will get an error, so solution is run
#openssl pkcs8  -topk8 -inform PEM -outform PEM -nocrypt -in keypair.pem -out private.pem

rsa.rsa-public-key=classpath:certificates/public.pem
rsa.rsa-private-key=classpath:certificates/private.pem

#spring.datasource.url=jdbc:postgresql://localhost:32768/car_management
#spring.datasource.url=jdbc:postgresql://localhost:5432/car_management
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=none


# create SSL certificate and enable it
# keytool -genkeypair -alias baseproject -keyalg RSA -keysize 4096 -storetype PKCS12 -keystore baseproject.p12 -validity 3650 -storepass password
#server.ssl.key-alias=baseproject
#server.ssl.key-password=password
#server.ssl.key-store-type=pkcs12
#server.ssl.key-store=classpath:certificates/baseproject.p12
#server.ssl.key-store-password=password



